---
description: >
  USE WHEN: README/UserManual/設計メモなどのドキュメントを書く/更新するとき
  GOAL: 現状を正確・簡潔に反映。連絡事項はコミット/PRで管理
  OUTPUT: 変更点の反映、リンク更新、過不足ない例とエラーメモ
globs: []
alwaysApply: true
---

## Constraints
- README/UserManual には連絡事項を書かない。現状のみを淡々と記述。
- 破壊的変更は理由と移行手順を簡潔に追記し、関連@参照を付ける。
- 例は最小で再現可能なものを1つ正例+1つ負例。
- 図や外部URLは説明的アンカーテキストを付与。

## Procedure
1) 変更点を箇条書きで抽出→該当セクションに反映。
2) API/型/環境変数の差分を確認し、書式を統一。
3) エラーのトラブルシュートに具体メッセージ/コード/対処を追加。

## Gates
- 仕様/挙動/公開API/HTTPレスポンス/CLI/環境変数/UIテキスト/インストール手順に差分があるPRは、`README.md` と `UserManual.md` を更新してください。回答の初めに必ず両ドキュメントについて更新の要否を議論してください。
  - ドキュメントの役割
    - "README.md"
      - 一般的なgithubリポジトリの"README.md"
    - "UserManual.md"
      - 一般的なユーザーのための操作説明書です。
      - 技術的な知識はない人たち（子供からお年寄り）のためのマニュアルなので、操作可能なものが変化したり、増減した時には必ずマニュアルを更新してください。
- UI変更の即時反映:
  - UIに操作可能な要素（ボタン/メニュー/切替）が追加・変更・削除された場合、そのPRで必ず `UserManual.md` を同時更新する（「追記が望ましい」等の先送り表現は禁止）。
- 次に該当する場合は必ず更新: 公開API（エンドポイント/型/必須性/エラーコード）、主要ユーザーフロー、環境変数の追加/変更/既定値、セットアップ/起動手順、よくあるエラーの対処。
- 自動確認例: バージョン/環境変数一覧/主要エンドポイント例/起動手順が現行コードと一致。

## Success Criteria
- 変更点の箇条書きと対応するセクションの差分がPRに含まれている。
- 最小の正例1つ・負例1つ（コマンド/コード/スクリーンショットのいずれか）が再現可能である。
- 外部/内部リンクが解決可能（死活確認済み）。
- PR本文に `Docs: updated` または `No-Docs-Change: <理由>` を含む。

## References
- @README.md
- @UserManual.md
