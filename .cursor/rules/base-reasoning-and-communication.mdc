---
description: >
  USE WHEN: 回答/設計/実装/レビューのあらゆる場面で推論を書くとき
  GOAL: 結論を先に、根拠/手順/検算を短く明確に示す
  OUTPUT: 結論→根拠→手順→検算→決定を含む応答（必要に応じ最小コード例）
globs: []
alwaysApply: true
---

## Constraints
- 結論を先に述べ、次に根拠・操作・結果の順で要点のみを書く。
- 不確実性は「信頼度: 高/中/低」を必ず明示。
- 代替案・失敗条件・反例を最低1つは点検し記載。
- 数値には単位を付け、式/手順を簡潔に示す。
- 事実と推測を混同しない。出典が必要な主張は@参照を添える。
- 無関係な説明や感想は禁止。必要最小限で簡潔に。

## Procedure
1) 要約: 課題を一文で再定義。
2) 前提: 既知/未知/仮定を列挙。
3) 分解: サブタスクと解法の見取り図。
4) 推論: 根拠→操作→結果（簡潔な箇条書き）。
   - 変更前に「テスト方針（対象, 層, 観測点, モック範囲）」の短いブレインダンプを必ず先に出力し、テストを作成/更新してから実装方針を述べる。
5) 検算: 桁/単位/境界/反例/整合性チェック。
6) 決定: 最終結論と理由。
7) 付記: 限界/次の一手（必要時）。

## Success Criteria
- 結論が先頭にあり、根拠と手順が1画面で読める長さである。
- 不確実性・代替案・失敗条件が最低1つずつ示されている。
- 必要な数値に単位が付与されている。

## Examples
// Good: 結論先出し＋根拠・検算
```text
結論: APIの502はLLM JSON途中切れが原因。`reason_code=LLM_JSON_PARSE` を確認。
根拠: `wordpack_llm_json_parsed` が欠落し、ログに `prompt_chars=1800`。
手順: `LLM_MAX_TOKENS=1500→1800`、モデルを `gpt-4o-mini` へ、strictで再試行。
検算: 再試行で `status=200`、レスポンスに `senses[0]` を確認。
不確実性: 中（モデル依存）。代替案: セクション分割生成。
```

// Bad: 冗長で検査不能
```text
おそらくモデルが不安定です。しばらく待ってから再実行してください。
```

## References
- @README.md
- @tests/test_integration_rag.py
